#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UplatnicaWCFtoDb
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="OtpremnicaDatabase")]
	public partial class ListaRobeLinqDbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertListaRobe(ListaRobe instance);
    partial void UpdateListaRobe(ListaRobe instance);
    partial void DeleteListaRobe(ListaRobe instance);
    #endregion
		
		public ListaRobeLinqDbDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["OtpremnicaDatabaseConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ListaRobeLinqDbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ListaRobeLinqDbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ListaRobeLinqDbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ListaRobeLinqDbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ListaRobe> ListaRobes
		{
			get
			{
				return this.GetTable<ListaRobe>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ListaRobes")]
	public partial class ListaRobe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private double _KolicinaRobe;
		
		private double _NovaCenaRobe;
		
		private double _UkupnaCenaRobe;
		
		private int _SifarnikRobeId;
		
		private int _OtpremnicaId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnKolicinaRobeChanging(double value);
    partial void OnKolicinaRobeChanged();
    partial void OnNovaCenaRobeChanging(double value);
    partial void OnNovaCenaRobeChanged();
    partial void OnUkupnaCenaRobeChanging(double value);
    partial void OnUkupnaCenaRobeChanged();
    partial void OnSifarnikRobeIdChanging(int value);
    partial void OnSifarnikRobeIdChanged();
    partial void OnOtpremnicaIdChanging(int value);
    partial void OnOtpremnicaIdChanged();
    #endregion
		
		public ListaRobe()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KolicinaRobe", DbType="Float NOT NULL")]
		public double KolicinaRobe
		{
			get
			{
				return this._KolicinaRobe;
			}
			set
			{
				if ((this._KolicinaRobe != value))
				{
					this.OnKolicinaRobeChanging(value);
					this.SendPropertyChanging();
					this._KolicinaRobe = value;
					this.SendPropertyChanged("KolicinaRobe");
					this.OnKolicinaRobeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NovaCenaRobe", DbType="Float NOT NULL")]
		public double NovaCenaRobe
		{
			get
			{
				return this._NovaCenaRobe;
			}
			set
			{
				if ((this._NovaCenaRobe != value))
				{
					this.OnNovaCenaRobeChanging(value);
					this.SendPropertyChanging();
					this._NovaCenaRobe = value;
					this.SendPropertyChanged("NovaCenaRobe");
					this.OnNovaCenaRobeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UkupnaCenaRobe", DbType="Float NOT NULL")]
		public double UkupnaCenaRobe
		{
			get
			{
				return this._UkupnaCenaRobe;
			}
			set
			{
				if ((this._UkupnaCenaRobe != value))
				{
					this.OnUkupnaCenaRobeChanging(value);
					this.SendPropertyChanging();
					this._UkupnaCenaRobe = value;
					this.SendPropertyChanged("UkupnaCenaRobe");
					this.OnUkupnaCenaRobeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SifarnikRobeId", DbType="Int NOT NULL")]
		public int SifarnikRobeId
		{
			get
			{
				return this._SifarnikRobeId;
			}
			set
			{
				if ((this._SifarnikRobeId != value))
				{
					this.OnSifarnikRobeIdChanging(value);
					this.SendPropertyChanging();
					this._SifarnikRobeId = value;
					this.SendPropertyChanged("SifarnikRobeId");
					this.OnSifarnikRobeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtpremnicaId", DbType="Int NOT NULL")]
		public int OtpremnicaId
		{
			get
			{
				return this._OtpremnicaId;
			}
			set
			{
				if ((this._OtpremnicaId != value))
				{
					this.OnOtpremnicaIdChanging(value);
					this.SendPropertyChanging();
					this._OtpremnicaId = value;
					this.SendPropertyChanged("OtpremnicaId");
					this.OnOtpremnicaIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
